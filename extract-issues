#!/usr/bin/bash

# use -t to configure token
while getopts ":r:p:" arg; do
  case $arg in
    r) releaseVersion=$OPTARG;;
    p) projectsCommaSeparated=$OPTARG;;
    *) echo "Please provide the release version and projects. usage: $0 [-r -p]" >&2
       exit 1 ;;
  esac
done

# Set comma as delimiter
IFS=','
#Read the split projects into an array based on comma delimiter
read -r -a projects <<< "$projectsCommaSeparated"

grepsArguments=""
for project in "${projects[@]}"
do
  grepsArguments="$grepsArguments --grep=\"^$project-[0-9].*\""
done

separator="|"
regex="$( printf "${separator}%s" "${projects[@]}" )"
regex="${regex:${#separator}}"

git fetch --prune --unshallow --tags
tagVersion=$(echo -e "$releaseVersion" | sed 's/\.//g')
previousTag=$(git tag --list --sort=-version:refname "5.$tagVersion*" | head -n 1)
revision=$(git log -g "origin/release/$releaseVersion" -1 --format=%H)
issueKeys=$(git log "$previousTag".."$revision" -i --pretty="format:%s""$grepsArguments" | sort | grep -oP --regexp="($regex)-[0-9]{5,6}" | uniq  | tr '\n' ',' | sed 's/,$//g')
echo -e "$issueKeys"